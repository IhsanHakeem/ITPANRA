 
PowerShell command for future reference 
 
$servers = @('MBX1','MBX2', 'MBX4', 'MBX5')
$MBXSRV = @('OWA','ECP','OAB','AutoDiscover','EWS','Microsoft-Server-Actiync','RPC','MAPI')
$OWA= $MBXSRV.Get(0)
$ECP= $MBXSRV.Get(1)
$OAB= $MBXSRV.Get(2)
$AutoDiscover = $MBXSRV.Get(3)
$EWS= $MBXSRV.Get(4)
$Actiynce=$MBXSRV.Get(5)
$RPC=$MBXSRV.Get(6)
$MAPI=$MBXSRV.Get(7)
 
foreach ($server in $servers)
{
 
$url="https://$server.itpanra.com"
$MBXServices = @("$url/$OWA/healthcheck.htm","$url/$ECP/healthcheck.htm","$url/$OAB/healthcheck.htm","$url/$AutoDiscover/healthcheck.htm","$url/$EWS/healthcheck.htm","$url/$Actiynce/healthcheck.htm","$url/$RPC/healthcheck.htm","$url/$MAPI/healthcheck.htm")
 
foreach ($MBXService in $MBXServices)
{
# First we create the request.
$HTTP_Request = [System.Net.WebRequest]::Create($MBXService)
 
# We then get a response from the site.
$HTTP_Response = $HTTP_Request.GetResponse()
 
# We then get the HTTP code as an integer.
$HTTP_Status = [int]$HTTP_Response.StatusCode
 
If ($HTTP_Status -eq 200) {
    Write-Host "Server $server $MBXService site is OK!"
}
Else {
    Write-Host "The Site $server $MBXService may be down, please check!"
}
 
# Finally, we clean up the http request by closing it.
If ($HTTP_Response -eq $null) { } 
Else { $HTTP_Response.Close() }
}
} 
